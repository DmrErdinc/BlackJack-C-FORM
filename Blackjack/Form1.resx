<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XgAAAABJRU5ErkJggg==
</value>
  </data>
</root>